{"version":3,"sources":["lib/markup/photodiode.js","lib/utils.js","lib/markup/stimuli.js","config/trigger.js","config/main.js","trials/camera.js","assets/images sync nonrecursive //.(png|jpe?g|svg)$","assets/images/blue_payout_correct_10.png","assets/images/blue_payout_correct_100.png","components/Login.jsx","lib/markup/eventMarkerMessage.js","trials/holdUpMarker.js","trials/startCode.js","timelines/preamble.js","lib/markup/actionMarkup.js","trials/actions.js","trials/fixation.js","lib/markup/fixation.js","lib/markup/feedback.js","trials/feedback.js","timelines/taskTrial.js","timelines/taskBlock.js","config/tutorial.js","config/experiment.js","trials/instructions.js","timelines/main.js","lib/rt-categorize-html.js","components/JsPsychExperiment.jsx","firebase.js","App.jsx","index.js"],"names":["__webpack_require__","d","__webpack_exports__","photodiodeGhostBox","pdSpotEncode","_config_main__WEBPACK_IMPORTED_MODULE_0__","_config_trigger__WEBPACK_IMPORTED_MODULE_1__","jquery__WEBPACK_IMPORTED_MODULE_2__","jquery__WEBPACK_IMPORTED_MODULE_2___default","n","ipcRenderer","config","USE_ELECTRON","electron","window","require","class_","USE_PHOTODIODE","concat","taskCode","numBlinks","eventCodes","open_task","repeat_pulse_for","ms","i","callback","$","css","background-color","setTimeout","pulse_for","send","sleep","jitter50","deepCopy","getProlificId","getTurkUniqueId","beep","r","jspsych_react__WEBPACK_IMPORTED_MODULE_0__","Promise","resolve","base","offset","Math","floor","random","jitter","obj","JSON","parse","stringify","keys","map","turkInfo","jsPsych","turk","workerId","assignmentId","variable","vars","location","search","substring","split","length","pair","decodeURIComponent","getQueryVariable","audioCodes","context","AudioContext","o","createOscillator","g","createGain","type","connect","frequency","setValueAtTime","console","log","currentTime","destination","start","stop","baseStimulus","element","prompt","arguments","undefined","module","exports","fixation","evidence","show_earnings","feedback","test_connect","taskName","defaultBlockSettings","lang","lodash__WEBPACK_IMPORTED_MODULE_1__","lodash__WEBPACK_IMPORTED_MODULE_1___default","_trigger__WEBPACK_IMPORTED_MODULE_2__","_brown_ccv_behavioral_task_trials__WEBPACK_IMPORTED_MODULE_3__","_lib_utils__WEBPACK_IMPORTED_MODULE_4__","Audio","preload","USE_MTURK","outsideTurk","USE_PROLIFIC","USE_FIREBASE","process","REACT_APP_FIREBASE","_unused","USE_CAMERA","REACT_APP_VIDEO","USE_EEG","mlang","_","merge","conditions","repeats_per_condition","is_practice","is_tutorial","photodiode_active","init","USE_VOLUME","cameraStart","document","title","markup","instructions","camera","stimulus","choices","continue","button","response_ends_trial","on_load","participantId","data","get","values","participant_id","getElementById","handleEvents","stream","recorder","srcObject","recordedChunks","MediaRecorder","mimeType","addEventListener","e","size","push","blob","media","reader","FileReader","fileName","Date","now","onload","readyState","buffer","Buffer","result","readAsArrayBuffer","saveBlob","Blob","navigator","mediaDevices","getUserMedia","video","then","desktopCapturer","getSources","types","_ref","Object","_home_runner_work_extradimensional_shifting_bandit_extradimensional_shifting_bandit_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_runner_work_extradimensional_shifting_bandit_extradimensional_shifting_bandit_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","sources","_iterator","_step","source","wrap","_context","prev","next","_home_runner_work_extradimensional_shifting_bandit_extradimensional_shifting_bandit_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__","s","done","value","name","mandatory","chromeMediaSource","chromeMediaSourceId","id","catch","error","err","f","_x","apply","this","on_finish","cameraCapture","screenCapture","alert","cameraEnd","duration","task","recording_end","trial_duration","./blue_payout_correct_10.png","./blue_payout_correct_100.png","webpackContext","req","webpackContextResolve","Error","code","p","Login","onLogin","envParticipantId","envStudyId","validationFunction","_useState","useState","_useState2","slicedToArray","setParticipant","_useState3","_useState4","studyId","setStudy","_useState5","_useState6","setError","useEffect","react_default","createElement","className","role","Form","onSubmit","preventDefault","loggedIn","Group","controlId","Label","Control","autoFocus","onChange","target","Button","style","width","block","disabled","eventMarkerMessage","asyncToGenerator","regenerator_default","abrupt","eventMarker","found","holdUpMarker","focus","innerHTML","startCode","setting_up","timeline","showMessage","responseType","message","responseEndsTrial","buttons","preamble","actionTrial","c1","actions","rules","on_start","trial","allData","preData","history","filter","Boolean","rule","switchCount","stimSeq","c1Side","every","val","arr","key_answer","correct","key_press","left","c1Choice","hasOwnProperty","trialNum","Array","fill","pop","unshift","complete","rewarded","jittered","green","NO_KEYS","feedbackHTML","too_slow","taskTrial","shuffleArray","array","j","checkIfDuplicateExists","taskBlock","from","flat","loop_function","tutorialBlock","exptBlock2","screenOne","welcome","throughout","screenTwo","screen2","screenThree","screen3","screenFour","screen4","screenFive","screen5","screen5_2","screenSix","screen6","screenSeven","screen7","primaryTimeline","pages","show_clickable_nav","splice","end","mturkTimeline","countdown","message1","message2","tl","rt_categorize_html","plugin","info","description","parameters","plugins","parameterType","HTML_STRING","pretty_name","default","KEYCODE","ALL_KEYS","text_answer","STRING","correct_text","incorrect_text","force_correct_button_press","BOOL","show_stim_with_feedback","no_function","show_feedback_on_timeout","timeout_message","stimulus_duration","INT","feedback_duration","display_element","pluginAPI","querySelector","visibility","trial_data","after_response","clearAllTimeouts","cancelAllKeyboardResponses","key","rt","timeout","atext","replace","getKeyboardResponse","callback_function","endTrial","valid_responses","rt_method","persist","allow_held_key","doFeedback","finishTrial","JsPsychExperiment","dataUpdateFunction","dataFinishFunction","experiment","settings","on_data_update","apiKey","REACT_APP_apiKey","authDomain","REACT_APP_authDomain","databaseURL","REACT_APP_databaseURL","projectId","REACT_APP_projectId","storageBucket","REACT_APP_storageBucket","messagingSenderId","REACT_APP_messagingSenderId","appId","REACT_APP_appId","db","firebase","initializeApp","firestore","hostname","useEmulator","initParticipant","startDate","collection","doc","set","start_time","app_version","appVersion","app_platform","platform","results","addToFirebase","study_id","start_date","update","FieldValue","arrayUnion","App","toISOString","setLogin","setRenderer","psiturk","setPsiturk","_useState7","_useState8","setEnvParticipantId","_useState9","_useState10","setEnvStudyId","_useState11","_useState12","currentMethod","setMethod","_useState13","_useState14","reject","setReject","query","URLSearchParams","defaultValidation","defaultFunction","setLoggedIn","useCallback","addProperties","task_version","version","credentials","sendSync","lodash","noConflict","turkId","PsiTurk","pID","Fragment","components_JsPsychExperiment","desktop","mturk","recordTrialData","_ref2","_callee2","_context2","saveData","completeHIT","completePsiturk","localSave","components_Login","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.441f2440.chunk.js","sourcesContent":["import { config } from \"../../config/main\";\nimport { eventCodes } from \"../../config/trigger\";\nimport $ from \"jquery\";\n\n// conditionally load electron and psiturk based on MTURK config variable\nlet ipcRenderer = false;\nif (config.USE_ELECTRON) {\n  const electron = window.require(\"electron\");\n  ipcRenderer = electron.ipcRenderer;\n}\n\n// Relies on styling in App.css, generate PD spot\nconst photodiodeGhostBox = () => {\n  const class_ = config.USE_PHOTODIODE ? \"visible\" : \"invisible\";\n\n  const markup = `<div class=\"photodiode-box ${class_}\" id=\"photodiode-box\">\n\t\t\t\t\t\t\t\t\t<span id=\"photodiode-spot\" class=\"photodiode-spot\"></span>\n  \t\t\t\t\t\t\t\t</div>`;\n  return markup;\n};\n\nconst pdSpotEncode = (taskCode) => {\n  function pulse_for(ms, callback) {\n    $(\".photodiode-spot\").css({ \"background-color\": \"black\" });\n    setTimeout(() => {\n      $(\".photodiode-spot\").css({ \"background-color\": \"white\" });\n      callback();\n    }, ms);\n  }\n\n  function repeat_pulse_for(ms, i) {\n    if (i > 0) {\n      pulse_for(ms, () => {\n        setTimeout(() => {\n          repeat_pulse_for(ms, i - 1);\n        }, ms);\n      });\n    }\n  }\n\n  if (config.USE_PHOTODIODE) {\n    const blinkTime = 40;\n    let numBlinks = taskCode;\n    if (taskCode < eventCodes.open_task) numBlinks = 1;\n    repeat_pulse_for(blinkTime, numBlinks);\n    if (ipcRenderer) ipcRenderer.send(\"trigger\", taskCode);\n  }\n};\n\nexport { photodiodeGhostBox, pdSpotEncode };\n","import { jsPsych } from 'jspsych-react'\nimport requireContext from 'require-context.macro'\n\nconst sleep = (ms) => {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n// add a random number between 0 and offset to the base number\nconst jitter = (base, offset) => (\n  base + Math.floor(Math.random() * Math.floor(offset))\n)\n\n// add a random number between 0 and 50 to the base number\nconst jitter50 = (base) => jitter(base, 50)\n\n// flip a coin\nconst randomTrue = () => Math.random() > 0.5\n\n// deeply copy an object\nconst deepCopy = (obj) => JSON.parse(JSON.stringify(obj))\n\n// format a number as a dollar amount\nconst formatDollars = (amount) => '$' + parseFloat(amount).toFixed(2)\n\n\n// create a pre-trial wait period\nconst generateWaitSet = (trial, waitTime) => {\n  let waitTrial = Object.assign({}, trial)\n  waitTrial.trial_duration = waitTime\n  waitTrial.response_ends_trial = false\n  waitTrial.prompt = '-'\n\n  return [waitTrial, trial]\n}\n\nconst keypressResponse = (info) => {\n  const data = {\n    key_press: info.key\n  }\n\n  jsPsych.finishTrial(data)\n}\n\nconst startKeypressListener = () => {\n  let keyboardListener = jsPsych.pluginAPI.getKeyboardResponse({\n    callback_function: keypressResponse,\n    valid_responses: jsPsych.ALL_KEYS,\n    persist: false\n  })\n\n  return keyboardListener\n}\n\n// import images\nconst importAll = (r) => {\n  return r.keys().map(r);\n}\n\nconst images = importAll(requireContext('../assets/images', false, /\\.(png|jpe?g|svg)$/));\n\nconst getTurkUniqueId = () => {\n  const turkInfo = jsPsych.turk.turkInfo()\n  const uniqueId = `${turkInfo.workerId}:${turkInfo.assignmentId}`\n  return uniqueId\n}\n\nconst getQueryVariable = (variable) => {\n  let query = window.location.search.substring(1);\n  let vars = query.split(\"&\");\n  for (let i = 0; i < vars.length; i++) {\n    let pair = vars[i].split(\"=\");\n    if (decodeURIComponent(pair[0]) === variable) {\n      return decodeURIComponent(pair[1]);\n    }\n  }\n};\n\nconst getProlificId = () => {\n  const prolificId = getQueryVariable(\"PROLIFIC_PID\");\n  return prolificId\n};\n\nconst beep = (audioCodes) => {\n  const context = new AudioContext()\n  const o = context.createOscillator()\n  const g = context.createGain()\n  o.type = audioCodes.type\n  o.connect(g)\n  o.frequency.setValueAtTime(audioCodes.frequency, 0)\n  console.log(context.currentTime)\n  g.connect(context.destination)\n  o.start()\n  o.stop(context.currentTime + 0.4)\n}\n\n\nexport {\n  sleep,\n  jitter,\n  jitter50,\n  randomTrue,\n  deepCopy,\n  formatDollars,\n  generateWaitSet,\n  images,\n  startKeypressListener,\n  getProlificId,\n  getTurkUniqueId,\n  beep\n}\n","const baseStimulus = (element, prompt = false) => {\n  const class_ = prompt\n    ? \"main-prompt\"\n    : \"main\";\n  return `<div class=${class_}>${element}</div>`;\n};\n\nexport { baseStimulus };\n","// NOTE - these event codes must match what is in public/config/trigger.js\nconst eventCodes = {\n\tfixation: 1,\n\tevidence: 5,\n\tshow_earnings: 7,\n\tfeedback: 8,\n\ttest_connect: 32,\n\topen_task: 18\n}\n\n// this is module.exports isntead of just exports as it is also imported into the electron app\nmodule.exports = {\n\teventCodes\n}\n","// config/main.js\n// This is the main configuration file where universal and default settings should be placed.\n// These settins can then be imported anywhere in the app as they are exported at the botom of the file.\n\nimport { jsPsych } from \"jspsych-react\";\nimport _ from \"lodash\";\nimport { eventCodes } from \"./trigger\";\nimport { init } from \"@brown-ccv/behavioral-task-trials\";\nimport { getProlificId } from \"../lib/utils\";\n\n// mapping of letters to key codes\nconst keys = {\n  A: 65,\n  B: 66,\n  C: 67,\n  F: 70,\n  J: 74,\n  space: 32,\n};\n\n// audio codes\nconst audioCodes = {\n  frequency: 100 * (eventCodes.open_task - 9),\n  type: \"sine\",\n};\n\nconst reward = new Audio('/sounds/reward.mp3');\nreward.preload = 'auto';\nconst no_reward = new Audio('/sounds/no-reward.mp3');\nno_reward.preload = 'auto';\n\nconst taskName = \"honeycomb template\";\n\n// is this mechanical turk?\nlet USE_MTURK = !jsPsych.turk.turkInfo().outsideTurk;\nlet USE_PROLIFIC = getProlificId() && !USE_MTURK;\nlet USE_ELECTRON = true;\nlet USE_FIREBASE = process.env.REACT_APP_FIREBASE === \"true\";\n\ntry {\n  window.require(\"electron\");\n} catch {\n  USE_ELECTRON = false;\n}\n\n// whether or not to ask the participant to adjust the volume\nconst USE_VOLUME = process.env.REACT_APP_VOLUME === \"true\";\n// these variables depend on USE_ELECTRON\n// whether or not to enable video\nconst USE_CAMERA = process.env.REACT_APP_VIDEO === \"true\" && USE_ELECTRON;\n// whether or not the EEG/event marker is available\nconst USE_EEG =\n  process.env.REACT_APP_USE_EEG === \"true\" && USE_ELECTRON;\n// whether or not the photodiode is in use\nconst USE_PHOTODIODE =\n  process.env.REACT_APP_USE_PHOTODIODE === \"true\" && USE_ELECTRON;\n\n// get language file\nconst lang = require(\"../language/en_us.json\");\nif (!USE_ELECTRON) {\n  // if this is mturk, merge in the mturk specific language\n  const mlang = require(\"../language/en_us.mturk.json\");\n  _.merge(lang, mlang);\n}\n\nconst defaultBlockSettings = {\n  conditions: [\"a\", \"b\", \"c\"],\n  repeats_per_condition: 1, // number of times every condition is repeated\n  is_practice: false,\n  is_tutorial: false,\n  photodiode_active: false,\n};\n\n// setting config for trials\nconst config = init({\n  USE_PHOTODIODE,\n  USE_EEG,\n  USE_ELECTRON,\n  USE_MTURK,\n  USE_VOLUME,\n  USE_CAMERA,\n  USE_PROLIFIC,\n  USE_FIREBASE\n});\n\nexport {\n  taskName,\n  keys,\n  defaultBlockSettings,\n  lang,\n  eventCodes,\n  config,\n  audioCodes,\n  reward,\n  no_reward\n};\n","import { lang, taskName, config} from '../config/main'\nimport { photodiodeGhostBox } from '../lib/markup/photodiode'\nimport { baseStimulus } from '../lib/markup/stimuli'\nimport { jsPsych } from 'jspsych-react'\n\n\nlet ipcRenderer = false;\nif (config.USE_ELECTRON) {\n  const electron = window.require('electron');\n  ipcRenderer  = electron.ipcRenderer;\n}\n\nfunction saveBlob(blob, media, participantId) {\n  let reader = new FileReader()\n  let fileName =`pid_${participantId}_${media}_${Date.now()}.webm`\n  reader.onload = function() {\n      if (reader.readyState === 2) {\n          var buffer = new Buffer(reader.result)\n          ipcRenderer.send('save_video', fileName, buffer)\n          console.log(`Saving ${JSON.stringify({ fileName, size: blob.size })}`)\n      }\n  }\n  reader.readAsArrayBuffer(blob)\n}\n\nconst cameraStart = () => {\n  document.title = taskName\n  let markup = `\n  <div class=\"d-flex flex-column align-items-center\">\n  <p>${lang.instructions.camera}</p>\n  <video id=\"camera\" width=\"640\" height=\"480\" autoplay></video>\n  </div>\n  `\n  let stimulus = baseStimulus(markup, true) +\n                 photodiodeGhostBox()\n\n  return {\n    type: 'html_button_response',\n    stimulus: stimulus,\n    choices: [ lang.prompt.continue.button],\n    response_ends_trial: true,\n    on_load: () => {\n      // Grab elements, create settings, etc.\n      // Elements for taking the snapshot\n      const participantId = jsPsych.data.get().values()[0].participant_id\n\n      let camera = document.getElementById('camera');\n\n\n      const handleEvents = function(stream, recorder) {\n        console.log(stream)\n        if (recorder === \"cameraCapture\") {\n          camera.srcObject = stream;\n        }\n      \n        \n        const options = {mimeType: 'video/webm'};\n        const recordedChunks = [];\n        window[recorder] = new MediaRecorder(stream, options);\n    \n        window[recorder].addEventListener('dataavailable', function(e) {\n          if (e.data.size > 0) {\n            recordedChunks.push(e.data);\n          }\n        });\n    \n        window[recorder].addEventListener('stop', function() {\n          const blob = new Blob(recordedChunks)\n          saveBlob(blob, recorder, participantId)\n        });\n    \n      };\n    \n      navigator.mediaDevices.getUserMedia({ video: true })\n          .then((stream) => handleEvents(stream, 'cameraCapture'));\n\n      const { desktopCapturer } = window.require('electron')\n\n      desktopCapturer.getSources({ types: ['window'] }).then(async sources => {\n        for (const source of sources) {\n          if (source.name === taskName) {\n            navigator.mediaDevices.getUserMedia({\n              video: {\n                mandatory: {\n                  chromeMediaSource: 'desktop',\n                  chromeMediaSourceId: source.id\n                }\n              }\n            }).then(stream => {\n              handleEvents(stream, 'screenCapture')\n            })\n            .catch(error => console.log(error))\n          } \n        }\n      })\n    \n    },\n    on_finish: () => {\n      if (config.USE_CAMERA) {\n        try {\n          window.cameraCapture.start()\n          window.screenCapture.start()\n        } catch (error) {\n          window.alert(\"Camera permissions were not given, if you choose to proceed, your recording will not be saved. Please restart the experiment after you have given permission.\")\n        }\n        \n      }\n    }\n  }\n}\n\nconst cameraEnd = (duration) => {\n  let stimulus = baseStimulus(`<h1>${lang.task.recording_end}</h1>`, true) + photodiodeGhostBox()\n\n   return {\n    type: 'html_keyboard_response',\n    stimulus: stimulus,\n    trial_duration: duration,\n    on_load: () => {\n      if (config.USE_CAMERA) {\n        console.log('finished')\n        try {\n          window.cameraCapture.stop()\n          window.screenCapture.stop()\n        } catch (error) {\n          window.alert(\"Your video recording was not saved\")\n        }\n        \n      }\n    }\n  }\n}\n\n\nexport {\n  cameraStart,\n  cameraEnd\n}","var map = {\n\t\"./blue_payout_correct_10.png\": 71,\n\t\"./blue_payout_correct_100.png\": 72\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 70;","module.exports = __webpack_public_path__ + \"static/media/blue_payout_correct_10.f515a81e.png\";","module.exports = __webpack_public_path__ + \"static/media/blue_payout_correct_100.ae2416c7.png\";","import React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction Login({ onLogin, envParticipantId, envStudyId, validationFunction }) {\n  // State variables for login screen\n  const [participantId, setParticipant] = useState(\"\");\n  const [studyId, setStudy] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    // Update based on environment variables\n    setParticipant(envParticipantId);\n    setStudy(envStudyId);\n  }, [envParticipantId, envStudyId]);\n\n  // Checks if forms are filled in\n  function validateForm() {\n    return participantId.length > 0 && studyId.length > 0;\n  }\n\n  // Function to log in participant\n  function handleSubmit(e) {\n    e.preventDefault();\n    // Validates fields\n    validationFunction(participantId, studyId)\n    // Logs in depending on result from promise\n    .then((loggedIn) => {\n      if (loggedIn) {\n        onLogin(loggedIn, studyId, participantId);\n      } else {\n        setError(true);\n      }\n    });\n  }\n\n  return (\n    <div className=\"centered-h-v\">\n      <div className=\"width-50\">\n        {error ? (\n          <div className=\"alert alert-danger\" role=\"alert\">\n            The participant ID and study ID do not match\n          </div>\n        ) : null}\n        <Form className=\"centered-h-v\" onSubmit={handleSubmit}>\n          <Form.Group className=\"width-100\" size=\"lg\" controlId=\"participantId\">\n            <Form.Label>Participant ID</Form.Label>\n            <Form.Control\n              autoFocus\n              type=\"participantId\"\n              value={participantId}\n              onChange={(e) => setParticipant(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group className=\"width-100\" size=\"lg\" controlId=\"studyId\">\n            <Form.Label>Study ID</Form.Label>\n            <Form.Control\n              type=\"studyId\"\n              value={studyId}\n              onChange={(e) => setStudy(e.target.value)}\n            />\n          </Form.Group>\n          <Button\n            style={{ width: \"100%\" }}\n            block\n            size=\"lg\"\n            type=\"submit\"\n            disabled={!validateForm()}\n          >\n            Log In\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import { lang } from '../../config/main'\n\nconst eventMarkerMessage = async () => {\n\t\treturn `<span style=\"color: green;\">${lang.eventMarker.found}</span>`\n}\n\nexport default eventMarkerMessage\n","import { lang } from '../config/main'\nimport { photodiodeGhostBox } from '../lib/markup/photodiode'\nimport { baseStimulus } from '../lib/markup/stimuli'\nimport eventMarkerMessage from '../lib/markup/eventMarkerMessage'\n\nconst holdUpMarker = () => {\n  let stimulus = baseStimulus(`<div><h2 id='usb-alert'></h2></div>`, true) + photodiodeGhostBox()\n\n   return {\n    type: 'html_button_response',\n    stimulus: stimulus,\n    prompt: [`<br><h3>${lang.prompt.focus}</h3>`],\n    choices: [lang.prompt.continue.button],\n    on_load: () => (eventMarkerMessage()\n                      .then(s => document.getElementById('usb-alert')\n                      .innerHTML = s )\n                    )\n  }\n}\n\nexport default holdUpMarker\n","import { eventCodes, lang, audioCodes } from '../config/main'\nimport { photodiodeGhostBox, pdSpotEncode } from '../lib/markup/photodiode'\nimport { baseStimulus } from '../lib/markup/stimuli'\nimport { beep } from '../lib/utils'\n\nconst startCode = () => {\n  let stimulus = baseStimulus(`<h1>${lang.prompt.setting_up}</h1>`, true) + photodiodeGhostBox()\n\n   return {\n    type: 'html_keyboard_response',\n    stimulus: stimulus,\n    trial_duration: 2000,\n    on_load: () => {\n      pdSpotEncode(eventCodes.open_task)\n      beep(audioCodes)\n    }\n\n  }\n}\n\nexport default startCode\n","import holdUpMarker from \"../trials/holdUpMarker\";\nimport startCode from \"../trials/startCode\";\nimport { lang, config } from \"../config/main\";\nimport { showMessage } from \"@brown-ccv/behavioral-task-trials\";\n\nlet timeline = [showMessage(config, {\n  responseType: \"html_button_response\",\n  message: lang.task.name,\n  responseEndsTrial: true,\n  buttons: [lang.prompt.continue.button],\n})]\nif (config.USE_PHOTODIODE) {\n  timeline.push(holdUpMarker())\n  timeline.push(startCode())\n}\n\nconst preamble = {\n  type: \"html_keyboard_response\",\n  stimulus: \"\",\n  timeline: timeline\n};\n\n\n\nexport default preamble;\n","const actionTrial = (c1) => {\n  if (c1) {\n    return `<div class=\"beads_container\"><div class=\"circle c1\"></div><div class=\"circle c2\" ></div></div>`\n  } else {\n    return `<div class=\"beads_container\"><div class=\"circle c2\"></div><div class=\"circle c1\"></div></div>`\n  }\n}\n\nconst tooSlow = (stimulus) => {\n  return `<div class=\"beads_container\"><h1 class=\"too_slow\">${stimulus}</h1></div>`\n}\n\nexport {\n  actionTrial,\n  tooSlow\n}\n","import { eventCodes} from '../config/main'\nimport { photodiodeGhostBox, pdSpotEncode } from '../lib/markup/photodiode'\nimport { actionTrial } from '../lib/markup/actionMarkup'\nimport { jsPsych } from 'jspsych-react'\n\nconst actions = (rules) => {\n  let c1 = Math.random() < 0.5;\n  let stimulus = actionTrial(c1) + photodiodeGhostBox()\n\n  return {\n    type: 'html_keyboard_response',\n    stimulus: stimulus,\n    trial_duration: 1250,\n    response_ends_trial: true,\n    on_start: (trial) => {\n      let allData = jsPsych.data.get().values();\n      let preData = allData[allData.length-4]\n      if (preData != null) {\n        if (preData.history.filter(Boolean).length >= 16) {\n          trial.data = {rule : rules[preData.switchCount+1]}\n        } else trial.data = {rule : preData.rule}\n      } else trial.data = {rule : rules[0]}\n      let stimSeq = [2,3,4];\n      if (preData != null) stimSeq[2]=preData.c1Side\n      if (allData[allData.length-8] != null) stimSeq[1]=allData[allData.length-8].c1Side\n      if (allData[allData.length-12] != null) stimSeq[0]=allData[allData.length-12].c1Side\n      if (stimSeq.every( (val, i, arr) => val === arr[0] )) c1 = !stimSeq[0]\n      else c1 = Math.random() < 0.5;\n      trial.stimulus = actionTrial(c1) + photodiodeGhostBox()\n      switch (trial.data.rule) {\n        case \"L\":\n          trial.data.key_answer = 70\n          break;\n        case \"R\":\n          trial.data.key_answer = 74\n          break;\n        case \"C1\":\n          if (c1) trial.data.key_answer = 70\n          else trial.data.key_answer = 74\n          break;\n        default:\n          if (!c1) trial.data.key_answer = 70\n          else trial.data.key_answer = 74\n          break;\n      }\n    },\n    on_load: () => {\n      pdSpotEncode(eventCodes.open_task)\n    },\n    on_finish: (data) => {\n      let preData = jsPsych.data.get().values();\n      preData = preData[preData.length-5]\n      data.correct=data.key_press===data.key_answer\n      data.left=data.key_press===70\n      data.c1Choice=(data.key_press===70 && c1) || (data.key_press===74 && !c1)\n      data.c1Side=c1\n      if (preData == null || !preData.hasOwnProperty('trialNum')) {\n        data.trialNum=1;\n        data.history=new Array(20).fill(false)\n        data.history[0]=data.correct\n        data.switchCount=0\n      } else {\n        data.trialNum=preData.trialNum+1\n        if (data.rule === preData.rule) {\n          data.history=preData.history\n          data.switchCount=preData.switchCount\n        }\n        else {\n          data.history = new Array(20).fill(false)\n          data.switchCount=preData.switchCount+1\n        }\n        data.history.pop()\n        data.history.unshift(data.correct)\n        if (preData.switchCount+1===rules.length&&data.history.filter(Boolean).length >= 16) data.complete = true\n      }\n      if (data.key_press != null) {\n        if ((data.correct && Math.random() < 0.8) || (!data.correct && Math.random() < 0.2)) {\n             data.rewarded = true\n        } else {\n             data.rewarded = false\n        }\n      } else {\n        data.rewarded = false\n      }\n    }\n  }\n}\n\nexport {\n  actions\n}\n","import { eventCodes } from '../config/main'\nimport { jitter50 } from '../lib/utils'\nimport { pdSpotEncode, photodiodeGhostBox } from '../lib/markup/photodiode'\nimport { fixationHTML } from '../lib/markup/fixation'\nimport { jsPsych } from 'jspsych-react'\n\nconst fixation = (duration, jittered=true, green=false, hideCursor=true) => {\n  let stimulus = fixationHTML(green) + photodiodeGhostBox()\n\n  const code = eventCodes.fixation;\n\n  const trial_duration = jittered ? jitter50(duration) : duration\n\n  return {\n    type: 'html_keyboard_response',\n    choices: jsPsych.NO_KEYS,\n    stimulus: stimulus,\n    response_ends_trial: false,\n    trial_duration: trial_duration,\n    on_load: () => {\n      pdSpotEncode(code)\n    },\n    on_finish: (data) => {\n      data.code = code\n    }\n  }\n}\n\nexport {\n   fixation\n}\n","export const fixationHTML = (color) => {\n  if (color) {\n    return '<div class=\"center_container\"><div id=\"fixation-dot\" style=\"color: green\">+</div></div>'\n  } else {\n    return '<div class=\"center_container\"><div id=\"fixation-dot\" style=\"color: white\">+</div></div>'\n  }\n}\n","export const feedbackHTML = (correct) => {\n  if (correct) {\n    return '<div class=\"center_container\"><div id=\"feedback-text\" style=\"color: green\">✓</div></div>'\n  } else {\n    return '<div class=\"center_container\"><div id=\"feedback-text\" style=\"color: red\">✕</div></div>'\n  }\n}\n","import { eventCodes, lang } from '../config/main'\nimport { pdSpotEncode, photodiodeGhostBox } from '../lib/markup/photodiode'\nimport { feedbackHTML } from '../lib/markup/feedback'\nimport { jsPsych } from 'jspsych-react'\nimport { tooSlow } from '../lib/markup/actionMarkup'\n\nconst feedback = () => {\n  let stimulus = feedbackHTML(true) + photodiodeGhostBox()\n\n  const code = eventCodes.feedback;\n\n  return {\n    type: 'html_keyboard_response',\n    choices: jsPsych.NO_KEYS,\n    stimulus: stimulus,\n    response_ends_trial: false,\n    trial_duration: 500,\n    on_start: (trial) => {\n      let preData = jsPsych.data.get().values();\n      preData = preData[preData.length-1]\n      if (preData.key_press == null) {\n        trial.stimulus = tooSlow(lang.prompt.too_slow) + photodiodeGhostBox()\n        trial.trial_duration = 2000\n      } else {\n        trial.stimulus = feedbackHTML(preData.rewarded) + photodiodeGhostBox()\n        trial.trial_duration = 750\n      }\n    },\n    on_load: () => {\n      pdSpotEncode(code)\n    },\n    on_finish: (data) => {\n      data.code = code\n    }\n  }\n}\n\nexport {\n   feedback\n}\n","import { actions } from \"../trials/actions\"\nimport { fixation } from \"../trials/fixation\"\nimport { feedback } from \"../trials/feedback\"\n\nconst taskTrial = (rules) => {\n  // timeline\n  let timeline = [\n    // fixation\n    fixation(2000, true, false, true),\n    fixation(200, false, true, true),\n    // show condition\n    actions(rules),\n    feedback()\n  ];\n\n  return {\n    type: \"html_keyboard_response\",\n    timeline: timeline,\n  };\n};\n\nexport default taskTrial;\n","import taskTrial from './taskTrial'\n\nconst taskBlock = () => {\n  // initialize block\n\t// timeline = loop through trials\n\tlet rules = Array.from({length: 2 }, () => [\"L\", \"R\", \"C1\", \"C2\"]).flat()\n\tshuffleArray(rules);\n\twhile (checkIfDuplicateExists(rules)) {\n\t\tshuffleArray(rules);\n\t}\n\n  return {\n\t\ttimeline: [taskTrial(rules)],\n\t\tloop_function: function(data){\n\t\t\tlet values = data.values();\n\t\t\treturn !values[values.length-2].hasOwnProperty('complete')\n\t\t}\n\t}\n}\n\nfunction shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n}\n\nfunction checkIfDuplicateExists(arr) {\n\tfor (let i=1;i<arr.length;i++) {\n\t\tif (arr[i-1]===arr[i]) return true\n\t}\n\treturn false\n}\n\nexport default taskBlock\n","import { defaultBlockSettings } from './main';\nimport { deepCopy } from '../lib/utils'\n\n// TUTORIAL SETTINGS\n\n// create copy of default settings\nlet tutorialBlock = deepCopy(defaultBlockSettings)\n\n// update default settings for tutorial\ntutorialBlock.is_tutorial = true\ntutorialBlock.photodiode_active = false\n\n// export the settings\nexport {\n\ttutorialBlock\n}\n","import { defaultBlockSettings } from './main';\nimport { deepCopy } from '../lib/utils'\n\n// FIRST EXPERIMENT BLOCK SETTINGS\n\n// create copy of default settings\nlet exptBlock1 = deepCopy(defaultBlockSettings)\n\nexptBlock1.repeats_per_condition = 2\n\n// SECOND EXPERIMENT BLOCK SETTINGS\n\n// create copy of default settings\nlet exptBlock2 = deepCopy(defaultBlockSettings)\n\nexptBlock2.conditions = [\"e\", \"f\"]\nexptBlock2.repeats_per_condition = 2\n\nexport {\n  exptBlock1,\n  exptBlock2,\n}\n","import { lang } from '../config/main'\nimport { baseStimulus } from '../lib/markup/stimuli'\n\nconst screenOne = baseStimulus(`\n    <div class='instructions'>\n    <h3>${lang.instructions.welcome}</h3>\n    <div class='instructions_container'><div class=\"circle c1\"></div><div class=\"circle c2\"></div></div>\n    <h3>${lang.instructions.throughout}</h3>\n    </div>\n    `, true)\n\nconst screenTwo = baseStimulus(`\n    <div class='instructions'>\n    <h3>${lang.instructions.screen2}</h3>\n    </div>\n    `, true)\n\nconst screenThree = baseStimulus(`\n    <div class='instructions'>\n    <h3>${lang.instructions.screen3}</h3>\n    </div>\n    `, true)\n\nconst screenFour = baseStimulus(`\n    <div class='instructions'>\n    <h3>${lang.instructions.screen4}</h3>\n    </div>\n    `, true)\n\nconst screenFive =  baseStimulus(`\n    <div class='instructions'>\n    <h3>${lang.instructions.screen5}</h3><br/>\n    <div id=\"feedback-text\" style=\"color: green\">✓</div>\n    <h3>${lang.instructions.screen5_2}</h3><br/>\n    <div id=\"feedback-text\" style=\"color: red\">✕</div>\n    </div>\n    `, true)\n\nconst screenSix =  baseStimulus(`\n    <div class='instructions'>\n    <h3>${lang.instructions.screen6}</h3><br/>\n    <div id=\"fixation-dot\" style=\"color: white\">+</div>\n    </div>\n    `, true)\n\nconst screenSeven = baseStimulus(`\n    <div class='instructions'>\n    <h3>${lang.instructions.screen7}</h3>\n    </div>\n    `, true)\n\nconst instructions = () => {\n  let tl = [\n    screenOne,\n    screenTwo,\n    screenThree,\n    screenFour,\n    screenFive,\n    screenSix,\n    screenSeven\n  ]\n\n  return {\n    type: 'instructions',\n    pages: tl,\n    show_clickable_nav: true\n\n  }\n}\n\nexport default instructions\n","import preamble from \"./preamble\";\nimport taskBlock from \"./taskBlock\";\nimport { countdown } from \"@brown-ccv/behavioral-task-trials\";\nimport { cameraStart, cameraEnd } from \"../trials/camera\"\nimport { lang, config } from \"../config/main\";\nimport { tutorialBlock } from \"../config/tutorial\";\nimport { exptBlock2 } from \"../config/experiment\";\nimport { showMessage } from \"@brown-ccv/behavioral-task-trials\";\nimport instructions from \"../trials/instructions\";\n\nlet primaryTimeline = [\n  instructions(),\n  taskBlock()\n];\n\nif (config.USE_CAMERA) {\n  primaryTimeline.splice(1,0,cameraStart())\n  primaryTimeline.push(cameraEnd(5000))\n}\n\nprimaryTimeline.push(showMessage(config, {\n  duration: 5000,\n  message: lang.task.end,\n}))\n\nconst mturkTimeline = [\n  preamble,\n  countdown({ message: lang.countdown.message1 }),\n  taskBlock(tutorialBlock),\n  countdown({ message: lang.countdown.message2 }),\n  taskBlock(exptBlock2),\n  showMessage(config, {\n    duration: 5000,\n    message: lang.task.end,\n  }),\n];\n\nexport const tl = config.USE_MTURK ? mturkTimeline : primaryTimeline;\n","import { jsPsych } from \"jspsych-react\";\n\nexport function rt_categorize_html() {\n\n  var plugin = {};\n\n  plugin.info = {\n    name: 'categorize-html',\n    description: '',\n    parameters: {\n      stimulus: {\n        type: jsPsych.plugins.parameterType.HTML_STRING,\n        pretty_name: 'Stimulus',\n        default: undefined,\n        description: 'The HTML content to be displayed.'\n      },\n      key_answer: {\n        type: jsPsych.plugins.parameterType.KEYCODE,\n        pretty_name: 'Key answer',\n        default: undefined,\n        description: 'The key to indicate the correct response.'\n      },\n      choices: {\n        type: jsPsych.plugins.parameterType.KEYCODE,\n        pretty_name: 'Choices',\n        default: jsPsych.ALL_KEYS,\n        array: true,\n        description: 'The keys the subject is allowed to press to respond to the stimulus.'\n      },\n      text_answer: {\n        type: jsPsych.plugins.parameterType.STRING,\n        pretty_name: 'Text answer',\n        default: null,\n        description: 'Label that is associated with the correct answer.'\n      },\n      correct_text: {\n        type: jsPsych.plugins.parameterType.STRING,\n        pretty_name: 'Correct text',\n        default: \"<p class='feedback'>Correct</p>\",\n        description: 'String to show when correct answer is given.'\n      },\n      incorrect_text: {\n        type: jsPsych.plugins.parameterType.STRING,\n        pretty_name: 'Incorrect text',\n        default: \"<p class='feedback'>Incorrect</p>\",\n        description: 'String to show when incorrect answer is given.'\n      },\n      prompt: {\n        type: jsPsych.plugins.parameterType.STRING,\n        pretty_name: 'Prompt',\n        default: null,\n        description: 'Any content here will be displayed below the stimulus.'\n      },\n      force_correct_button_press: {\n        type: jsPsych.plugins.parameterType.BOOL,\n        pretty_name: 'Force correct button press',\n        default: false,\n        description: 'If set to true, then the subject must press the correct response key after feedback in order to advance to next trial.'\n      },\n      show_stim_with_feedback: {\n        type: jsPsych.plugins.parameterType.BOOL,\n        default: true,\n        no_function: false,\n        description: ''\n      },\n      show_feedback_on_timeout: {\n        type: jsPsych.plugins.parameterType.BOOL,\n        pretty_name: 'Show feedback on timeout',\n        default: false,\n        description: 'If true, stimulus will be shown during feedback. If false, only the text feedback will be displayed during feedback.'\n      },\n      timeout_message: {\n        type: jsPsych.plugins.parameterType.STRING,\n        pretty_name: 'Timeout message',\n        default: \"<p>Please respond faster.</p>\",\n        description: 'The message displayed on a timeout non-response.'\n      },\n      stimulus_duration: {\n        type: jsPsych.plugins.parameterType.INT,\n        pretty_name: 'Stimulus duration',\n        default: null,\n        description: 'How long to hide stimulus.'\n      },\n      trial_duration: {\n        type: jsPsych.plugins.parameterType.INT,\n        pretty_name: 'Trial duration',\n        default: null,\n        description: 'How long to show trial'\n      },\n      feedback_duration: {\n        type: jsPsych.plugins.parameterType.INT,\n        pretty_name: 'Feedback duration',\n        default: 2000,\n        description: 'How long to show feedback.'\n      }\n    }\n  }\n\n  plugin.trial = function(display_element, trial) {\n\n    display_element.innerHTML = '<div id=\"jspsych-categorize-html-stimulus\" class=\"jspsych-categorize-html-stimulus\">'+trial.stimulus+'</div>';\n\n    // hide image after time if the timing parameter is set\n    if (trial.stimulus_duration !== null) {\n      jsPsych.pluginAPI.setTimeout(function() {\n        display_element.querySelector('#jspsych-categorize-html-stimulus').style.visibility = 'hidden';\n      }, trial.stimulus_duration);\n    }\n\n    // if prompt is set, show prompt\n    if (trial.prompt !== null) {\n      display_element.innerHTML += trial.prompt;\n    }\n\n    var trial_data = {};\n\n    // create response function\n    var after_response = function(info) {\n\n      // kill any remaining setTimeout handlers\n      jsPsych.pluginAPI.clearAllTimeouts();\n\n      // clear keyboard listener\n      jsPsych.pluginAPI.cancelAllKeyboardResponses();\n\n      var correct = false;\n      if (trial.key_answer === info.key) {\n        correct = true;\n      }\n\n      // save data\n      trial_data = {\n        \"rt\": info.rt,\n        \"correct\": correct,\n        \"stimulus\": trial.stimulus,\n        \"key_press\": info.key\n      };\n\n      display_element.innerHTML = '';\n\n      var timeout = info.rt == null;\n      if (timeout) {\n        doFeedback(correct, timeout);\n      }\n      else {\n        endTrial()\n      }\n    }\n\n    jsPsych.pluginAPI.getKeyboardResponse({\n      callback_function: after_response,\n      valid_responses: trial.choices,\n      rt_method: 'performance',\n      persist: false,\n      allow_held_key: false\n    });\n\n    if (trial.trial_duration !== null) {\n      jsPsych.pluginAPI.setTimeout(function() {\n        after_response({\n          key: null,\n          rt: null\n        });\n      }, trial.trial_duration);\n    }\n\n    function doFeedback(correct, timeout) {\n\n      if (timeout && !trial.show_feedback_on_timeout) {\n        display_element.innerHTML += trial.timeout_message;\n      } else {\n        // show image during feedback if flag is set\n        if (trial.show_stim_with_feedback) {\n          display_element.innerHTML = '<div id=\"jspsych-categorize-html-stimulus\" class=\"jspsych-categorize-html-stimulus\">'+trial.stimulus+'</div>';\n        }\n\n        // substitute answer in feedback string.\n        var atext = \"\";\n        if (correct) {\n          atext = trial.correct_text.replace(\"%ANS%\", trial.text_answer);\n        } else {\n          atext = trial.incorrect_text.replace(\"%ANS%\", trial.text_answer);\n        }\n\n        // show the feedback\n        display_element.innerHTML += atext;\n      }\n      // check if force correct button press is set\n      if (trial.force_correct_button_press && correct === false && ((timeout && trial.show_feedback_on_timeout) || !timeout)) {\n\n        var after_forced_response = function(info) {\n          endTrial();\n        }\n\n        jsPsych.pluginAPI.getKeyboardResponse({\n          callback_function: after_forced_response,\n          valid_responses: [trial.key_answer],\n          rt_method: 'performance',\n          persist: false,\n          allow_held_key: false\n        });\n\n      } else {\n        jsPsych.pluginAPI.setTimeout(function() {\n          endTrial();\n        }, trial.feedback_duration);\n      }\n\n    }\n\n    function endTrial() {\n      display_element.innerHTML = '';\n      jsPsych.finishTrial(trial_data);\n    }\n\n  };\n\n  return plugin;\n}\n","import React from \"react\";\nimport { Experiment, jsPsych } from \"jspsych-react\";\nimport { tl } from \"../timelines/main\";\nimport { rt_categorize_html } from \"../lib/rt-categorize-html\";\n\nfunction JsPsychExperiment({ dataUpdateFunction, dataFinishFunction }) {\n  jsPsych.plugins[\"rt-categorize-html\"] = rt_categorize_html();\n  return (\n    <div className=\"App\">\n      <Experiment\n        settings={{\n          timeline: tl,\n          on_data_update: (data) => dataUpdateFunction(data),\n          on_finish: (data) => dataFinishFunction(data),\n        }}\n      />\n    </div>\n  );\n}\nexport default JsPsychExperiment;\n","import firebase from \"firebase\";\nimport 'firebase/firestore';\n\nrequire(\"dotenv\").config();\n\n// Set collection name\nconst collectionName = \"participant_responses\";\n\n// Firebase config\nlet config = {\n  apiKey: process.env.REACT_APP_apiKey,\n  authDomain: process.env.REACT_APP_authDomain,\n  databaseURL: process.env.REACT_APP_databaseURL,\n  projectId: process.env.REACT_APP_projectId || \"no-firebase\",\n  storageBucket: process.env.REACT_APP_storageBucket,\n  messagingSenderId: process.env.REACT_APP_messagingSenderId,\n  appId: process.env.REACT_APP_appId,\n};\n\n\n// Get a Firestore instance\nvar db = firebase.initializeApp(config).firestore();\n\n// Use emulator if on localhost\nif (window.location.hostname === \"localhost\") {\n  db.useEmulator(\"localhost\", 8080);\n}\n\n// Add participant data and trial data to db\nconst initParticipant = (participantId, studyId, startDate) => {\n  // return promise with value true if participant and study id match, false otherwise\n    return db.collection(collectionName)\n    .doc(studyId)\n    .collection('participants')\n    .doc(participantId)\n    .collection('data')\n    .doc(startDate)\n    .set({ start_time: startDate, app_version: window.navigator.appVersion, app_platform: window.navigator.platform, results: []})\n    .then(()=>{\n      return true\n    })\n    .catch((error) => {\n      return false\n    });\n};\n\n// Add inidividual trials to db\nconst addToFirebase = (data) => {\n  console.log(data)\n  const participantId = data.participant_id;\n  const studyId = data.study_id;\n  const startDate = data.start_date\n  \n  db.collection(collectionName)\n    .doc(studyId)\n    .collection('participants')\n    .doc(participantId)\n    .collection('data')\n    .doc(startDate)\n    .update('results', firebase.firestore.FieldValue.arrayUnion(data))\n};\n\n// Export types that exists in Firestore\nexport {\n  db,\n  collectionName,\n  initParticipant,\n  addToFirebase\n};\n\nexport default firebase;","import React, { useState, useEffect, useCallback } from 'react'\n\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport '@fortawesome/fontawesome-free/css/all.css'\n\nimport Login from './components/Login'\nimport JsPsychExperiment from './components/JsPsychExperiment'\n\nimport { jsPsych } from 'jspsych-react'\nimport { getTurkUniqueId, getProlificId, sleep } from './lib/utils'\nimport { initParticipant, addToFirebase } from './firebase'\n\nimport { config } from './config/main'\nimport { version } from '../package.json'\n\nfunction App () {\n  // Variables for time\n  const startDate = new Date().toISOString()\n  // Variables for login\n  const [loggedIn, setLogin] = useState(false)\n  const [ipcRenderer, setRenderer] = useState(false)\n  const [psiturk, setPsiturk] = useState(false)\n  const [envParticipantId, setEnvParticipantId] = useState('')\n  const [envStudyId, setEnvStudyId] = useState('')\n  const [currentMethod, setMethod] = useState('default')\n  const [reject, setReject] = useState(false)\n\n  const query = new URLSearchParams(window.location.search)\n\n  // Validation functions for desktop case and firebase\n  const defaultValidation = async () => {\n    return true\n  }\n  const firebaseValidation = (participantId, studyId) => {\n    return initParticipant(participantId, studyId, startDate)\n  }\n\n  // Adding data functions for firebase, electron adn Mturk\n  const defaultFunction = () => {}\n  const firebaseUpdateFunction = (data) => {\n    addToFirebase(data)\n  }\n  const desktopUpdateFunction = (data) => {\n    ipcRenderer.send('data', data)\n  }\n  const psiturkUpdateFunction = (data) => {\n    psiturk.recordTrialData(data)\n  }\n\n  // On finish functions for electron, Mturk\n  const defaultFinishFunction = () => {\n    jsPsych.data.get().localSave('csv', 'neuro-task.csv')\n  }\n  const desktopFinishFunction = () => {\n    ipcRenderer.send('end', 'true')\n  }\n  const psiturkFinishFunction = () => {\n    const completePsiturk = async () => {\n      psiturk.saveData()\n      await sleep(5000)\n      psiturk.completeHIT()\n    }\n    completePsiturk()\n  }\n\n  // Function to add jspsych data on login\n  const setLoggedIn = useCallback(\n    (loggedIn, studyId, participantId) => {\n      if (loggedIn) {\n        jsPsych.data.addProperties({\n          participant_id: participantId,\n          study_id: studyId,\n          start_date: startDate,\n          task_version: version\n        })\n      }\n      setLogin(loggedIn)\n    },\n    [startDate]\n  )\n\n  // Login logic\n  useEffect(() => {\n    // For testing and debugging purposes\n    console.log('Turk:', config.USE_MTURK)\n    console.log('Firebase:', config.USE_FIREBASE)\n    console.log('Prolific:', config.USE_PROLIFIC)\n    console.log('Electron:', config.USE_ELECTRON)\n    console.log('Video:', config.USE_CAMERA)\n    console.log('Volume:', config.USE_VOLUME)\n    console.log('Event Marker:', config.USE_EEG)\n    console.log('Photodiode:', config.USE_PHOTODIODE)\n    // If on desktop\n    if (config.USE_ELECTRON) {\n      const { ipcRenderer } = window.require('electron')\n      setRenderer(ipcRenderer)\n      ipcRenderer.send('updateEnvironmentVariables', config)\n      // If at home, fill in fields based on environment variables\n      const credentials = ipcRenderer.sendSync('syncCredentials')\n      if (credentials.envParticipantId) {\n        setEnvParticipantId(credentials.envParticipantId)\n      }\n      if (credentials.envStudyId) {\n        setEnvStudyId(credentials.envStudyId)\n      }\n      setMethod('desktop')\n    } else {\n      // If MTURK\n      if (config.USE_MTURK) {\n        /* eslint-disable */\n        window.lodash = _.noConflict()\n        const turkId = getTurkUniqueId()\n        setPsiturk(new PsiTurk(turkId, '/complete'))\n        setMethod('mturk')\n        setLoggedIn(true, 'mturk', turkId)\n        /* eslint-enable */\n      } else if (config.USE_PROLIFIC) {\n        const pID = getProlificId()\n        if (config.USE_FIREBASE && pID) {\n          setMethod('firebase')\n          setLoggedIn(true, 'prolific', pID)\n        } else {\n          setReject(true)\n        }\n      } else if (config.USE_FIREBASE) {\n        setMethod('firebase')\n        // Autologin with query parameters\n        const participantId = query.get('participantID')\n        const studyId = query.get('studyID')\n        if (participantId) {\n          setEnvParticipantId(participantId)\n        }\n        if (studyId) {\n          setEnvStudyId(studyId)\n        }\n      } else {\n        setMethod('default')\n      }\n    }\n    // eslint-disable-next-line\n  }, [])\n\n  if (reject) {\n    return (\n      <div className=\"centered-h-v\">\n        <div className=\"width-50 alert alert-danger\">\n          Please ask your task provider to enable firebase.\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <>\n        {loggedIn ? (\n          <JsPsychExperiment\n            dataUpdateFunction={\n              {\n                desktop: desktopUpdateFunction,\n                firebase: firebaseUpdateFunction,\n                mturk: psiturkUpdateFunction,\n                default: defaultFunction,\n              }[currentMethod]\n            }\n            dataFinishFunction={\n              {\n                desktop: desktopFinishFunction,\n                mturk: psiturkFinishFunction,\n                firebase: defaultFunction,\n                default: defaultFinishFunction\n              }[currentMethod]\n            }\n          />\n        ) : (\n          <Login\n            validationFunction={\n              {\n                desktop: defaultValidation,\n                default: defaultValidation,\n                firebase: firebaseValidation,\n              }[currentMethod]\n            }\n            envParticipantId={envParticipantId}\n            envStudyId={envStudyId}\n            onLogin={setLoggedIn}\n          />\n        )}\n      </>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}